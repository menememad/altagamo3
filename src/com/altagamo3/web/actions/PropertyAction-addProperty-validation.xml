<!DOCTYPE validators PUBLIC "-//OpenSymphony Group//XWork Validator 1.0.3//EN" "http://www.opensymphony.com/xwork/xwork-validator-1.0.3.dtd">
<validators>
    <field name="property.description">
		<field-validator type="requiredstring">
			<message>${getText("err.required", {getText("description")})}</message>
		</field-validator>
	</field>
    <field name="property.area">
		<field-validator type="int">
			<param name="min">20</param>
            <param name="max">5000000</param>
			<message>${getText("err.invalid", {getText("area")})}</message>
		</field-validator>
	</field>
    <field name="property.floorNo">
		<field-validator type="int">
		    <param name="min">-3</param>
            <param name="max">100</param>
			<message>${getText("err.invalid", {getText("floorNo")})}</message>
		</field-validator>
	</field>
    <field name="property.noOfBedRooms">
		<field-validator type="int">
		    <param name="min">1</param>
            <param name="max">100</param>
			<message>${getText("err.invalid", {getText("bedrooms.No")})}</message>
		</field-validator>
	</field>
    <field name="property.noOfHallRooms">
		<field-validator type="int">
		    <param name="min">1</param>
            <param name="max">50</param>
			<message>${getText("err.invalid", {getText("hallrooms.No")})}</message>
		</field-validator>
	</field>
    <field name="property.noOfBathRooms">
		<field-validator type="int">
		    <param name="min">1</param>
            <param name="max">20</param>
			<message>${getText("err.invalid", {getText("bathrooms.No")})}</message>
		</field-validator>
	</field>
    <field name="property.country.id">
		<field-validator type="int">
		    <param name="min">1</param>
            <message>${getText("err.required", {getText("location.country")})}</message>
		</field-validator>
	</field>
    <field name="property.state.id">
		<field-validator type="int">
		    <param name="min">1</param>
            <message>${getText("err.required", {getText("location.state")})}</message>
		</field-validator>
	</field>
        <field name="property.city.id">
		<field-validator type="int">
		    <param name="min">1</param>
            <message>${getText("err.required", {getText("location.city")})}</message>
		</field-validator>
	</field>
    <field name="property.price">
		<field-validator type="int">
			<param name="min">20</param>
            <param name="max">1000000000</param>
			<message>${getText("err.invalid", {getText("price")})}</message>
		</field-validator>
	</field>
    <field name="property.paymentInAdvance">
		<field-validator type="int">
			<param name="min">0</param>
            <param name="max">100000000</param>
			<message>${getText("err.invalid", {getText("pay.advance")})}</message>
		</field-validator>
		<field-validator type="expression">
		    <param name="expression">(((property.paymentInAdvance lt property.price) and (property.paymentType==2)) || (property.paymentType==1))</param>
		    <message>${getText("err.compare", {getText("pay.advance"),getText("price")})}</message>
		</field-validator>
	</field>
    <field name="property.installmentTotalDuration">
		<field-validator type="int">
			<param name="min">0</param>
            <param name="max">150</param>
			<message>${getText("err.invalid", {getText("total.installment.duration")})}</message>
		</field-validator>
	</field>
    <field name="property.client.username">
		<field-validator type="requiredstring">
			<message>${getText("err.required", {getText("owner.name")})}</message>
		</field-validator>
	</field>
    <field name="property.client.mobile">
		<field-validator type="regex">
			<param name="expression"><![CDATA[^([0-9\(\)\/\+ \-]*)$]]></param>
			<message>${getText("err.invalid", {getText("owner.mobile")})}</message>
		</field-validator>
	</field>
    <field name="property.client.email">
		<field-validator type="email">
			<message>${getText("err.invalid", {getText("owner.email")})}</message>
		</field-validator>
	</field>
</validators>